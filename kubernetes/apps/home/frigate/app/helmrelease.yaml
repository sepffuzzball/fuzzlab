---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app frigate
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      frigate:
        strategy: Recreate
        annotations:
          secret.reloader.stakater.com/reload: frigate-secrets
          configmap.reloader.stakater.com/reload: &config frigate-config
        pod:
          nodeSelector:
            google.feature.node.kubernetes.io/coral: "true"
            intel.feature.node.kubernetes.io/gpu: "true"
        containers:
          app:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.15.0
            env:
              TZ: ${TZ}
            envFrom:
              - secretRef:
                  name: frigate-secrets
            securityContext:
              privileged: true
            resources:
              requests:
                cpu: 1000m
                memory: 2Gi
              limits:
                memory: 10Gi
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          rtsp:
            enabled: true
            port: &restream-port 8554
    ingress:
      app:
        className: internal
        hosts:
          - host: &host "frigate.${SECRET_DOMAIN_LOCAL}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    route:
      app:
        enabled: true
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port


    persistence:
      data:
        existingClaim: frigate-data
        advancedMounts:
          frigate:
            app:
              - path: /data
      config:
        existingClaim: frigate-config
        advancedMounts:
          frigate:
            app:
              - path: /config
      config-file:
        type: configMap
        name: frigate-config
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml

      cache:
        type: emptyDir
        advancedMounts:
          frigate:
            app:
              - path: /dev/shm
      dev-bus-usb:
        type: hostPath
        hostPath: /dev/bus/usb
        hostPathType: Directory
      sys-bus-usb:
        type: hostPath
        hostPath: /sys/bus/usb
        hostPathType: Directory
      media:
        existingClaim: frigate-media
        advancedMounts:
          frigate:
            app:
              - path: /media
