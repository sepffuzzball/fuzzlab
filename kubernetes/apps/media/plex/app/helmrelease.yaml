---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
  namespace: ${NS}
  labels:
    app.kubernetes.io/name: *app
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          #nodeSelector:
            #intel.feature.node.kubernetes.io/gpu: "true"
            #nvidia.com/gpu.present: "true"
          securityContext:
            runAsUser: ${PUID}
            runAsGroup: ${PGID}
            fsGroup: ${PGID}
            fsGroupChangePolicy: OnRootMismatch
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.41.8.9834
            env:
              PLEX_ADVERTISE_URL: https://plex.fuzzball.me,https://plex.fuzball.enterprises,http://plex.fzbl.local,http://${PLEX_ADDR}:32400
              PLEX_NO_AUTH_NETWORKS: 10.0.0.0/16
              #VIDIA_DRIVER_CAPABILITIES: all
              #NVIDIA_VISIBLE_DEVICES: all
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 2000m
                #gpu.intel.com/i915: 1
                #nvidia.com/gpu: 1
                memory: 2Gi
              limits:
                cpu: 8000m
                #gpu.intel.com/i915: 1
                #nvidia.com/gpu: 1
                memory: 16Gi
    # defaultPodOptions:
    #   affinity:
    #     nodeAffinity:
    #       requiredDuringSchedulingIgnoredDuringExecution:
    #         nodeSelectorTerms:
    #           - matchExpressions:
    #               - key: nvidia.com/gpu.present
    #                 operator: In
    #                 values:
    #                   - "true"
    #   runtimeClassName: nvidia
    service:
      app:
        controller: plex
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        loadBalancerIP: ${PLEX_ADDR}
        ports:
          http:
            port: &port 32400

    ingress:
      app:
        enabled: true
        className: &class "pangolin"
        annotations:
          kubernetes.io/ingress.allow-http: "true"
          kubernetes.io/ingress.class: *class
          nginx.ingress.kubernetes.io/ssl-redirect: "false"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
        hosts:
          - host: &host "plex.${SECRET_DOMAIN_FBE}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: *port
        # tls:
        #   - hosts:
        #       - *host

    persistence:
      config:
        existingClaim: plex-config
        advancedMounts:
          plex:
            app:
              - path: /config

      plex-cache:
        existingClaim: plex-cache
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server/Cache

      lcl:
        existingClaim: lcl
        advancedMounts:
          plex:
            app:
              - path: /data

      tmpfs:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server/Logs
                subPath: logs
              - path: /transcode
                subPath: transcode
              - path: /tmp
                subPath: tmp
